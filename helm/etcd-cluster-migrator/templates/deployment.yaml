apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.name }}
    giantswarm.io/service-type: "managed"
    app.kubernetes.io/name: {{ .Values.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        giantswarm.io/service-type: "managed"
        app.kubernetes.io/name: {{ .Values.name }}
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      serviceAccountName: {{ .Values.name }}
      priorityClassName: system-cluster-critical
      hostNetwork: true
      containers:
        - name: {{ .Values.name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          args:
            {{- if index .Values.configmap "base-domain" }}
            - --base-domain={{ .Values.configmap "baseDomain" }}
            {{- else }}
            - --base-domain={{ .Values.app.baseDomain }}
            {{- end }}
            - --docker-registry={{ .Values.image.registry }}
            runAsUser: {{ .Values.app.userID }}
            runAsGroup: {{ .Values.app.groupID }}
          resources:
            {{ toYaml .Values.app.resources | indent 12 }}